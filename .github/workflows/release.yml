name: "GO Multi-Arch Release"

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: "Auto Release"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        os: [linux, windows, freebsd, openbsd]
        arch: [386, amd64, arm64]
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install Zip"
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: "Set up Go"
        uses: actions/setup-go@v2
        with:
          go-version: "1.19"

      - name: "Install Go dependencies"
        run: go mod download

      - name: "Generate random UUID"
        id: uuid
        run: echo "uuid=$(uuidgen)" >> $GITHUB_ENV

      - name: "Build and Package"
        run: |
          export GOOS=${{ matrix.os }}
          export GOARCH=${{ matrix.arch }}
          FILENAME="main.${GOOS}-${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then FILENAME="${FILENAME}.exe"; fi
          go build -ldflags "-X 'main.Fingerprint=${{ env.uuid }}'" -o dist/${FILENAME}
          mkdir -p dist/tempdir/fingerprints
          mkdir -p dist/tempdir/html
          mv dist/${FILENAME} dist/tempdir/
          cp -r global/fingerprints dist/tempdir/
          cp -r assets/html dist/tempdir/
          (cd dist/tempdir && zip -r ../${FILENAME}.zip .)
          rm -rf dist/tempdir

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: dist/*.zip

  release:
    name: "Create Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: "Download artifacts"
        uses: actions/download-artifact@v3
        with:
          name: binaries
      - name: "Release"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Nightly ${{ env.NOW }}"
          files: /home/runner/work/balooProxyX/balooProxyX/*.zip
